/*
 * File: app/view/TaskPanel.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('TaskManager.view.TaskPanel', {
    extend: 'Ext.form.Panel',
    alias: 'widget.taskpanel',

    requires: [
        'Ext.form.FieldSet',
        'Ext.field.Number',
        'Ext.field.DatePicker',
        'Ext.picker.Date',
        'Ext.Button',
        'Ext.field.Toggle',
        'Ext.Toolbar'
    ],

    config: {
        items: [
            {
                xtype: 'fieldset',
                locales: {
                    instructions: 'panels.fieldset_istruction'
                },
                itemId: 'taskFormField',
                items: [
                    {
                        xtype: 'numberfield',
                        hidden: true,
                        label: 'Id',
                        labelWidth: '35%',
                        name: 'task_id',
                        required: true,
                        value: null
                    },
                    {
                        xtype: 'textfield',
                        locales: {
                            label: 'panels.task.description'
                        },
                        label: 'Description',
                        labelWidth: '35%',
                        name: 'description',
                        required: true
                    },
                    {
                        xtype: 'selectfield',
                        locales: {
                            label: 'panels.task.priority'
                        },
                        label: 'Priority',
                        labelWidth: '35%',
                        name: 'priority',
                        required: true,
                        usePicker: true,
                        listeners: [
                            {
                                fn: function(component, eOpts) {
                                    component.setOptions([
                                    {
                                        text: Ux.locale.Manager.get("panels.task.priorities.low"),
                                        value: 1
                                    },
                                    {
                                        text: Ux.locale.Manager.get("panels.task.priorities.normal"),
                                        value: 2
                                    },
                                    {
                                        text: Ux.locale.Manager.get("panels.task.priorities.high"),
                                        value: 3
                                    }
                                    ]);
                                },
                                event: 'initialize'
                            }
                        ]
                    },
                    {
                        xtype: 'datepickerfield',
                        locales: {
                            label: 'panels.task.duedate'
                        },
                        label: 'Due Date',
                        labelWidth: '35%',
                        name: 'dueDate',
                        dateFormat: 'd-m-Y',
                        picker: {
                            enableLocale: true,
                            locales: {
                                dayText: 'date.day',
                                monthText: 'date.month',
                                yearText: 'date.year'
                            },
                            useTitles: true,
                            slotOrder: [
                                'day',
                                'month',
                                'year'
                            ],
                            yearFrom: 2010,
                            yearTo: 2015,
                            doneButton: {
                                locales: {
                                    text: 'buttons.done'
                                }
                            },
                            cancelButton: {
                                locales: {
                                    text: 'buttons.cancel'
                                }
                            }
                        }
                    },
                    {
                        xtype: 'togglefield',
                        locales: {
                            label: 'panels.task.completed'
                        },
                        label: 'Completed',
                        labelWidth: '35%',
                        name: 'completed'
                    }
                ]
            },
            {
                xtype: 'toolbar',
                docked: 'bottom',
                layout: {
                    type: 'hbox',
                    align: 'center',
                    pack: 'center'
                },
                items: [
                    {
                        xtype: 'button',
                        locales: {
                            text: 'buttons.save'
                        },
                        flex: 1,
                        itemId: 'saveButton',
                        margin: 10,
                        maxWidth: 150,
                        ui: 'confirm',
                        iconCls: 'organize',
                        text: 'Save'
                    },
                    {
                        xtype: 'button',
                        locales: {
                            text: 'buttons.delete'
                        },
                        flex: 1,
                        itemId: 'deleteButton',
                        margin: 10,
                        maxWidth: 150,
                        ui: 'decline',
                        iconCls: 'delete',
                        text: 'Delete'
                    }
                ]
            }
        ]
    }

});